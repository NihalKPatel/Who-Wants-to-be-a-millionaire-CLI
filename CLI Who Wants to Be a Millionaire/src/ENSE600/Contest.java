/*Author: Nihal PatelID: 17998542Project ID: 78Who Wants to Be a Millionaire?Description: The main fuction of this progarm is to run a Who Wants to Be a Millionaire?, by reading/writing the file with thecontestants and reading the file with the quetions.*/package ENSE600;    // Import Packages    import static ENSE600.Contestant.names;    import java.io.*;    import java.util.*;    public class Contest {           static Question questions[] = new Question[4]; // Initialize the questions object        static Contestant contestants[] = new Contestant[names.length]; // Initialize the contestants object        static Lifelines life_lines[] = new Lifelines [4]; // Initialize the life_lines object        public static void main (String[] args) throws IOException {            Scanner scanner = new Scanner (System.in);            File file = new File("contestants.txt");            System.out.println("Welcome to Who Wants to be a Millionaire");            System.out.println("-----------------------------------------\n\n");            FileWriter writer = new FileWriter(file);            System.out.println("4 Contestants are required");            for (int i = 0; i < 4; i++){                System.out.print("Enter contestants name: ");                Scanner sc = new Scanner(System.in);                String input = sc.nextLine();                writer.write(input+"\n");            }            writer.close();            // Variable Declarations                int value = 100,             values [] = new int [] {100, 200, 500, 1000, 2000, 5000, 10000, 20000, 50000, 75000, 100000, 250000, 500000, 750000, 1000000},             money[] = new int [4],            winnervalue=0,            count = 0;            String question="", a = "", b = "", c = "", d = "", answer="", hint = "", names[] = new String [4], player_answer = "";            boolean Right_Answer = false, quit = false;            for (int i = 0; i<4; i++) {                questions[i]= new Question ();                questions[i].question();                 contestants[i] = new Contestant();                contestants[i].contestant();                names = contestants[i].getNames();                life_lines[i] = new Lifelines ();                life_lines[i].lifelines (a, b, c, d, answer, question, hint, values[i]);            }            for (int i = 0; i<4; i++){ // For loop for the 4 contestants                count = 0;                quit = false;                value = 100;                questions[i].resetBuffer();                life_lines[i].resetLifelines();                do //do while loop for question untill players leaves or loses                 {                    life_lines[i].newValue(value);                    if (value == 100) {                                              System.out.println("\n"+names[i]+", It's Your Turn to play");                         System.out.println("Who wants to be a Millionaire!\n");                    }                    for (int j = 1; j<=7; j++) { // For loop to initalize all the questions, answers, possible answers, and the hints.                        if (j == 1) {                            question = questions[i].getQuestion();                            System.out.println("For $"+value+"\n"+question);                        }                        if (j == 2) {                            a = questions[i].getOption_A();                             System.out.println(a);                        }                        if (j == 3) {                            b = questions[i].getOption_B();                            System.out.println(b);                        }                        if (j == 4)                        {                            c = questions[i].getOption_C();                            System.out.println(c);                        }                        if (j == 5)                        {                            d = questions[i].getOption_D();                             System.out.println(d);                        }                        if (j == 6)                        {                            answer = questions[i].getAnswer();                        }                        if (j == 7)                        {                            hint = questions[i].getHint();                        }                }                    if (life_lines[i].hasLifeline()) {  // Checks to see if there are any lifelines                        System.out.println("\nOther Options");                        System.out.println("e) Use a lifeline");                        if (value == 100) {                            System.out.println();                    }                }                    life_lines[i].resetAnswers(a, b, c, d);                    if (value != 100&&life_lines[i].hasLifeline() == false){                        System.out.println("\nf) Walk out\n");                    }                                        else  if (value != 100) {                        System.out.println("f) Walk out\n");                    }                    do {                        System.out.print("Enter your answer: ");                        player_answer = scanner.nextLine();                         player_answer = player_answer.toLowerCase();                         if (player_answer.charAt(0)<97|| player_answer.charAt(0)>102) {                         System.out.println("Invalid Entry!");                        }                        if (life_lines[i].hasLifeline() == false&&player_answer.compareTo("e")==0) {                            System.out.println("Invalid Entry! You are out of Lifeline!");                        }                    } while ((player_answer.charAt(0)<97|| player_answer.charAt(0)>102)||(life_lines[i].hasLifeline() == false&&player_answer.compareTo("e")==0)|| (player_answer.compareTo("f")==0&&value==500));                        if (player_answer.compareTo("e")==0&&life_lines[i].hasLifeline()){                         do {                             player_answer = life_lines[i].useLifeline(a, b, c, d, answer, question, hint);                        } while (player_answer.compareTo("e")==0);                    }                                            if (player_answer.compareTo("f")==0&&value != 0){                         System.out.println("Thanks for playing!");                        quit = true;                     }                                        if (life_lines[i].hasLifeline() == false){                         if (player_answer.compareTo("e") == 0){                             do{                                 System.out.print("You are out of lifelines!\nEnter your player_answer again: ");                                player_answer = scanner.nextLine();                            } while (player_answer.compareTo("a")!=0&&player_answer.compareTo("b")!=0&&player_answer.compareTo("c")!=0&&player_answer.compareTo("d")!=0&&player_answer.compareTo("f")!=0);                       }                    }                    if (player_answer.compareTo(answer) == 0) {                        Right_Answer = true;                    }                                        else {                         Right_Answer = false;                                        }                                            if (Right_Answer == true&&value==100){                            contestants[i].setValue(value, names[i]);                     }                                            if (Right_Answer == true&&value!=1000000){                         System.out.println ("\nWell done! "+answer+" is correct!\n");                        value = values[count+1];                                       }                                        else if (Right_Answer == true&&value==1000000) {                        System.out.println("Congratulations, You won One Million Dollars!\n");                        contestants[i].setValue(value, names[i]);                        Right_Answer = false;                                            }                                        else if (Right_Answer == false&&player_answer.compareTo("f")!=0) {                         value = contestants[i].getLastValue(value, Right_Answer);                         contestants[i].setValue(value, names[i]);                         System.out.println("\nSorry, The answer was incorrect. The correct answer was: "+answer);                        System.out.println("You have have won $" + value+"\n");                        System.out.println("-----------------------------------------------------------------------");                    }                                        else if (Right_Answer == false && player_answer.compareTo("f")==0){                         value = contestants[i].getLast_Correct_Value(value);                        contestants[i].setValue(value, names[i]);                         System.out.println("\nYou have decided to leave the game! The correct answer was: "+answer);                        System.out.println("You have have won $" + value+"\n");                        System.out.println("-----------------------------------------------------------------------");                    }                                        count++;                     life_lines[i].resetSameturn();                                    }while (Right_Answer != false && value<=1000000 && quit!=true);             }                        money = contestants[1].getArray();                         for (int i = 0; i<4; i++){                 if (i == 0){                     winnervalue = money[i];                }                else{                    if (money[i]>winnervalue){                         winnervalue = money[i];                     }             }            }                        System.out.println("Results");             for (int i = 0; i<4; i++){                System.out.println(names[i]+"\t$"+ money[i]);            }            if (winnervalue!=0){                 System.out.print ("The winners are: ");            }            else if (winnervalue == 0){                 System.out.print ("Nobody Won!");            }            for (int i = 0; i<4; i++){                if (money[i] == winnervalue&&money[i]!=0&&winnervalue!=0){                    System.out.print(names[i]+", ");                }            }        }    }